// <auto-generated />
using System;
using AngularProject.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231123020447_initialization")]
    partial class initialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AngularProject.Model.Event", b =>
                {
                    b.Property<int>("eventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eventId"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.HasKey("eventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            eventId = 1,
                            description = "Enjoy live music in the open air.",
                            location = "City Park",
                            name = "Concert in the Park",
                            time = new DateTime(2023, 12, 1, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 2,
                            description = "Explore the latest trends in technology.",
                            location = "Conference Center",
                            name = "Tech Conference",
                            time = new DateTime(2023, 12, 5, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 3,
                            description = "A celebration of diverse cuisines.",
                            location = "Downtown Square",
                            name = "Food Festival",
                            time = new DateTime(2023, 12, 10, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 4,
                            description = "Cheer for your favorite teams.",
                            location = "Sports Complex",
                            name = "Sports Tournament",
                            time = new DateTime(2023, 12, 15, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 5,
                            description = "Explore the world of contemporary art.",
                            location = "Art Gallery",
                            name = "Art Exhibition",
                            time = new DateTime(2023, 12, 20, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 6,
                            description = "Watch a blockbuster under the stars.",
                            location = "Community Park",
                            name = "Movie Night",
                            time = new DateTime(2023, 12, 25, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 7,
                            description = "Hands-on experiments and demonstrations.",
                            location = "Science Museum",
                            name = "Science Fair",
                            time = new DateTime(2023, 12, 30, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 8,
                            description = "Discuss the latest literary masterpiece.",
                            location = "Local Library",
                            name = "Book Club Meeting",
                            time = new DateTime(2024, 1, 5, 19, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 9,
                            description = "Get fit with intense workouts.",
                            location = "Fitness Studio",
                            name = "Fitness Bootcamp",
                            time = new DateTime(2024, 1, 10, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            eventId = 10,
                            description = "Join hands for a cleaner neighborhood.",
                            location = "Various Locations",
                            name = "Community Cleanup",
                            time = new DateTime(2024, 1, 15, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AngularProject.Models.Favorite", b =>
                {
                    b.Property<int>("favoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("favoriteId"), 1L, 1);

                    b.Property<int>("eventId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("favoriteId");

                    b.ToTable("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
